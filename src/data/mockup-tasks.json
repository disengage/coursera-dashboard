{
  "My Project": [
    {
      "id": "1",
      "name": "Step 1: User Interface Design",
      "desc": "Create a visually appealing dashboard layout with components like task lists, task cards, filters, and a sidebar for navigation, very similar to task management website used by enterprises like Trello, ClickUp, etc. Design an intuitive interface that enhances usability and productivity.",
      "status": "complete",
      "dueDate": "2024-11-18"
    },
    {
      "id": "2",
      "name": "Step 2: Component State Management",
      "desc": "Utilize React state and props to manage the state of individual components. Use state to store and update task data, including titles, descriptions, due dates, and completion status.",
      "status": "complete",
      "dueDate": "2024-11-18"
    },
    {
      "id": "3",
      "name": "Step 3: React Hooks for Side Effects and Stateful Logic",
      "desc": "Implement React Hooks like useEffect and useState to handle side effects such as API requests and manage stateful logic like sorting tasks or applying filters.",
      "status": "complete",
      "dueDate": "2024-11-15"
    },
    {
      "id": "4",
      "name": "Step 4: Redux for Advanced State Management (if applicable)",
      "desc": "Integrate Redux for advanced state management if your application requires it. Redux helps manage global application state, handle asynchronous actions, and provides a centralized store for components to access.",
      "status": "todo",
      "dueDate": "2024-12-01"
    },
    {
      "id": "5",
      "name": "Step 5: DOM Manipulation Techniques",
      "desc": "Enhance user interactions by implementing DOM manipulation techniques such as event listeners. For example, enable drag-and-drop functionality to reorder tasks or utilize tooltips for additional task information.",
      "status": "complete",
      "dueDate": "2024-12-01"
    },
    {
      "id": "6",
      "name": "Step 6: Responsive Design",
      "desc": "Ensure your application is responsive by using CSS frameworks like Bootstrap or Flexbox. Create a layout that adapts to different screen sizes and devices, providing a seamless user experience across desktop, tablet, and mobile devices.",
      "status": "complete",
      "dueDate": "2024-12-01"
    },
    {
      "id": "7",
      "name": "Peer-graded Assignment: Create a Functional Dashboard with React",
      "desc": "Peer-graded assignments are assessments where other learners review and grade your submission. To get a grade, you have to receive a certain number of peer reviews and review a certain number of submissions.",
      "status": "inprogress",
      "dueDate": "2024-18-01"
    }
  ]
}
